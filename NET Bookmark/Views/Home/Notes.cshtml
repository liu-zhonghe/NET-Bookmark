@model List<WebBookmarkApp.Models.Note>
@{ ViewData["Title"] = "笔记"; }

<div class="notes-header mb-4">
    <div class="card glass-effect shadow-custom">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="text-gradient mb-0">
                        <i class="fas fa-sticky-note me-3"></i>
                        我的笔记
                    </h1>
                </div>
                <div class="col-md-6 text-md-end">
                    <a asp-action="Create" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus me-2"></i>
                        添加笔记
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 搜索和筛选区域 -->
<div class="search-section mb-4">
    <div class="card shadow-custom">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-8">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="searchInput" placeholder="搜索笔记标题或内容...">
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="sortSelect">
                        <option value="newest">最新创建</option>
                        <option value="oldest">最早创建</option>
                        <option value="title">按标题排序</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 筛选区域 -->
<div class="mb-3 d-flex flex-wrap align-items-center gap-2">
    <a href="/Home/Notes" class="btn btn-outline-secondary btn-sm">全部</a>
    <a href="/Home/Notes?type=bookmark" class="btn btn-outline-primary btn-sm">只看书签</a>
    <a href="/Home/Notes?type=note" class="btn btn-outline-success btn-sm">只看笔记</a>
    <span class="ms-2">按标签筛选：</span>
    @{
        var allTags = Model.SelectMany(n => n.Tags).Distinct().ToList();
        foreach (var tag in allTags)
        {
            <a href="/Home/Notes?tag=@tag" class="btn btn-outline-info btn-sm">@tag</a>
        }
    }
</div>

@if (Model != null && Model.Any())
{
    <div class="notes-grid">
        <div class="row g-4" id="notesContainer">
            @foreach (var note in Model)
            {
                <div class="col-lg-4 col-md-6 note-card" data-title="@note.Title.ToLower()" data-content="@note.Content.ToLower()">
                    <div class="card h-100 shadow-custom note-item">
                        <div class="card-body d-flex flex-column">
                            <div class="note-header mb-3">
                                <h3 class="card-title text-primary mb-2">
                                    <i class="fas fa-sticky-note me-2"></i>
                                    @note.Title
                                </h3>
                                <div class="note-meta">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
                                    </small>
                                </div>
                            </div>
                            
                            <div class="note-content flex-grow-1">
                                @if (note.IsBookmark)
                                {
                                    <p class="card-text text-muted">页数：@note.PageNumber</p>
                                }
                                else
                                {
                                    <p class="card-text text-muted">
                                        @(note.Content.Length > 100 ? note.Content.Substring(0, 100) + "..." : note.Content)
                                    </p>
                                }
                            </div>
                            
                            <div class="note-actions mt-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="note-tags">
                                        @if (note.IsBookmark)
                                        {
                                            <span class="badge bg-warning text-dark me-1"><i class="fas fa-bookmark"></i> 书签</span>
                                        }
                                        @if (note.Tags != null && note.Tags.Count > 0)
                                        {
                                            foreach (var tag in note.Tags)
                                            {
                                                <span class="badge bg-info text-dark me-1">@tag</span>
                                            }
                                        }
                                    </div>
                                    <div class="btn-group">
                                        <button class="btn btn-outline-primary btn-sm" data-tooltip="编辑笔记">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-outline-info btn-sm" data-tooltip="查看详情">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <a asp-action="Delete" asp-route-id="@note.Id" class="btn btn-outline-danger btn-sm" 
                                           data-tooltip="删除笔记" 
                                           onclick="return confirm('确定要删除这个笔记吗？')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    
    <!-- 分页信息 -->
    <div class="pagination-info mt-4">
        <div class="card shadow-custom">
            <div class="card-body text-center">
                <p class="text-muted mb-0">
                    显示 <span id="visibleCount">@Model.Count</span> 个笔记，共 <span id="totalCount">@Model.Count</span> 个
                </p>
            </div>
        </div>
    </div>

    <!-- 统计信息 -->
    <div class="row mt-4">
        <div class="col">
            <div class="alert alert-light">
                总数：@Model.Count，书签：@Model.Count(n => n.IsBookmark)，笔记：@Model.Count(n => !n.IsBookmark)，标签数：@Model.SelectMany(n => n.Tags).Distinct().Count()
            </div>
        </div>
    </div>
}
else
{
    <div class="empty-state">
        <div class="card shadow-custom">
            <div class="card-body text-center py-5">
                <div class="empty-icon mb-4">
                    <i class="fas fa-inbox fa-4x text-muted"></i>
                </div>
                <h3 class="text-muted mb-3">还没有笔记</h3>
                <p class="text-muted mb-4">开始创建您的第一个笔记，记录重要的信息和想法。</p>
                <a asp-action="Create" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-2"></i>
                    创建第一个笔记
                </a>
            </div>
        </div>
    </div>
}

<!-- 快速操作浮动按钮 -->
<div class="floating-actions">
    <button class="btn btn-primary rounded-circle" id="addNoteBtn" data-tooltip="快速添加笔记">
        <i class="fas fa-plus"></i>
    </button>
</div>

@section Scripts {
    <script>
        // 搜索功能
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const noteCards = document.querySelectorAll('.note-card');
            let visibleCount = 0;
            
            noteCards.forEach(card => {
                const title = card.dataset.title;
                const content = card.dataset.content;
                
                if (title.includes(searchTerm) || content.includes(searchTerm)) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            
            document.getElementById('visibleCount').textContent = visibleCount;
        });
        
        // 排序功能
        document.getElementById('sortSelect').addEventListener('change', function() {
            const sortBy = this.value;
            const container = document.getElementById('notesContainer');
            const cards = Array.from(container.children);
            
            cards.sort((a, b) => {
                const titleA = a.querySelector('.card-title').textContent.trim();
                const titleB = b.querySelector('.card-title').textContent.trim();
                
                switch(sortBy) {
                    case 'title':
                        return titleA.localeCompare(titleB);
                    case 'newest':
                        return -1; // 假设最新创建的在前
                    case 'oldest':
                        return 1; // 假设最早创建的在前
                    default:
                        return 0;
                }
            });
            
            cards.forEach(card => container.appendChild(card));
        });
        
        // 快速添加按钮
        document.getElementById('addNoteBtn').addEventListener('click', function() {
            window.location.href = '/Home/Create';
        });
        
        // 卡片悬停效果
        document.querySelectorAll('.note-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    </script>
}